{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","Math","round","src","alt","map","ingredient","text","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","axios","get","then","res","console","log","data","hits","catch","err","onSubmit","e","preventDefault","placeholder","type","value","onChange","target","length","label","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gQAqBeA,EAlBF,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,MAAMC,EAA8B,EAA9BA,SAASC,EAAqB,EAArBA,MAAMC,EAAe,EAAfA,YAChC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKN,IACL,6BAAI,iDAAmB,+BAAOO,KAAKC,MAAMP,UACzC,uBACA,qBAAKG,UAAWC,IAAMH,MAAOO,IAAKP,EAAOQ,IAAI,KAC7C,uBACA,oDACA,6BAEIP,EAAYQ,KAAI,SAAAC,GAAU,OAAE,6BAAKA,EAAWC,gBC+B7CC,EAxCL,WACR,IADY,EAGeC,mBAAS,IAHxB,mBAGLC,EAHK,KAGGC,EAHH,OAIaF,mBAAS,IAJtB,mBAILG,EAJK,KAIEC,EAJF,OAKWJ,mBAAS,IALpB,mBAKLK,EALK,KAKCC,EALD,KAuBZ,OAXAC,qBAAU,WACRC,IAAMC,IAAN,0CAA6CJ,EAA7C,mBAZW,WAYX,oBAXY,qCAYXK,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZT,EAAWS,EAAIG,KAAKC,SAErBC,OAAM,SAAAC,GACLL,QAAQC,IAAII,QAEd,CAACZ,IAGD,qBAAKhB,UAAU,MAAf,SACI,sBAAKA,UAAU,OAAf,UACE,uBAAM6B,SAnBE,SAAAC,GACdA,EAAEC,iBACFd,EAASH,IAiBwBd,UAAU,cAArC,UACE,uBAAOA,UAAU,QAAjB,oCACA,uBAAOA,UAAU,aAAagC,YAAY,cAAcC,KAAK,OAAOC,MAAOpB,EAAQqB,SAAU,SAAAL,GAAC,OAAEf,EAAUe,EAAEM,OAAOF,UACnH,wBAAQD,KAAK,SAASjC,UAAU,gBAAhC,uBAEF,qBAAKA,UAAU,UAAf,SAEEY,EAAQyB,OAAUzB,EAAQL,KAAI,SAAAL,GAAM,OAAE,cAAC,EAAD,CAAkCN,MAAOM,EAAOA,OAAOoC,MAAOzC,SAAUK,EAAOA,OAAOL,SAAUC,MAAOI,EAAOA,OAAOJ,MAAOC,YAAaG,EAAOA,OAAOH,aAA1IG,EAAOA,OAAOoC,UAA8I,oBAAItC,UAAU,UAAd,kEC1B5MuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,kBCfAa,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.d834f5ce.chunk.js","sourcesContent":["import React from 'react'\r\nimport style from './recipe.module.css'\r\n\r\nconst Recipe=({title,calories,image,ingredients})=>{\r\n    return (\r\n        <div className={style.recipe}>\r\n            <h1>{title}</h1>\r\n            <h2><strong>Calories : <span>{Math.round(calories)}</span></strong></h2>\r\n            <br/>\r\n            <img className={style.image} src={image} alt=''></img>\r\n            <br/>\r\n            <strong>Ingredients : </strong>\r\n            <ol>\r\n            {\r\n                ingredients.map(ingredient=><li>{ingredient.text}</li>)\r\n            }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe","import React,{useState,useEffect} from 'react'\nimport axios from 'axios'\nimport './App.css';\nimport Recipe from './Recipe';\n\nconst App=()=>{\n  const APP_ID='3d639734'\n  const APP_KEY='0138ca2f8ee2a5d9a5342fa6674703b1'\n  const [recipes,setRecipes]=useState([])\n  const [search,setSearch]=useState('')\n  const [query,setQuery]=useState('')\n\n  const getSearch=e=>{\n    e.preventDefault()\n    setQuery(search)\n  }\n\n  useEffect(()=>{\n    axios.get(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`)\n    .then(res=>{\n      console.log(res)\n      setRecipes(res.data.hits)\n    })\n    .catch(err=>{\n      console.log(err)\n    })\n  },[query])\n\n  return (\n    <div className=\"App\">\n        <div className='appp'>\n          <form onSubmit={getSearch} className='search-form'>\n            <label className='title'>Search recipe by name </label>\n            <input className='search-bar' placeholder='ex. chicken' type='text' value={search} onChange={e=>setSearch(e.target.value)}/>\n            <button type='submit' className='search-button'>Search</button>\n          </form>\n          <div className='recipes'>\n          {\n            recipes.length ?  recipes.map(recipe=><Recipe key={recipe.recipe.label} title={recipe.recipe.label} calories={recipe.recipe.calories} image={recipe.recipe.image} ingredients={recipe.recipe.ingredients}/>) : <h2 className='message'>No dish found corresponding to recipe name !</h2>\n          }\n          </div>\n        </div>\n    </div>\n  );\n}\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__2HGor\",\"image\":\"recipe_image__hhMoc\"};"],"sourceRoot":""}